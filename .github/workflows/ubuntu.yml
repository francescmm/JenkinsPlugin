name: Ubuntu

on:
  - push
  - pull_request

jobs:
  build:
    runs-on: ${{ matrix.env.os }}
    env:
      VERSION: 0.2.0
    strategy:
      matrix:
        env:
          - name: Linux
            os: ubuntu-20.04
            qtplatform: linux

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checking out the code
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Install dependencies
        id: vars
        run: |
          echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
          sudo apt-get -qq update
          sudo apt-get -qq install libgl1-mesa-dev libxkbcommon-x11-0 libc6-i386 build-essential libgl1-mesa-dev mesa-common-dev libgles2-mesa-dev libxkbcommon-x11-0 libxcb-icccm4-dev libxcb-xinerama0 libxcb-image0 libxcb-keysyms1 libxcb-* fakeroot
          sudo apt-get -qq remove gcc g++
          sudo apt-get install -y -qq gcc-9 g++-9
          sudo ln -s /usr/bin/g++-9 /usr/bin/g++
          sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc

      - name: Install Qt
        if: matrix.env.name == 'Linux'
        run: |
          sudo apt-get -qq install qt5-qmake qt5-default

      - name: Build JenkinsPlugin
        if: matrix.env.name == 'Linux'
        run: |
          mkdir build
          qmake JenkinsPlugin.pro
          make -j 4

      - name: Uploading JenkinsPlugin
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: lib/*

      - name: Prune previous runs
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const days_to_expiration = 30;
            const ms_in_day = 86400000;
            const now = Date.now();
            const pages = 5;

            // we don't want to prune old runs from test.yml
            // because we track the duration of runs over time

            const workflows = [
              'ubuntu.yml'
            ]

            let runs_to_delete = [];

            for (const workflow of workflows) {
              for (let page = 0; page < pages; page += 1) {
                let response = await github.actions.listWorkflowRuns({
                  owner: context.repo.owner,
                  page: page,
                  per_page: 100,
                  repo: context.repo.repo,
                  workflow_id: workflow
                });

                if (response.data.workflow_runs.length > 0) {
                  for (const run of response.data.workflow_runs) {
                    if (run.head_branch == "${{ steps.vars.outputs.short_ref }}" && run.head_sha != "${GITHUB_SHA}") {
                      runs_to_delete.push([run.id, run.name]);
                    }
                  }
                }
              }
            }

            for (const run of runs_to_delete) {
              console.log(`Run id ${run[0]} of '${run[1]}' is older than ${days_to_expiration} days. Deleting...`);
              try {
                await github.actions.deleteWorkflowRun({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  run_id: run[0]
                });
              } catch (error) {
                // ignore errors
              }
            }
